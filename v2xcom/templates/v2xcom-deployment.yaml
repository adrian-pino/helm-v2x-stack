apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Values.name}}
  namespace: {{.Values.namespace}}
  labels:
    app: {{.Values.name}}
    tier: {{.Values.labelTier}}
    rsu: {{.Values.labelRsu}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{.Values.name}}
  template:
    metadata:
      labels:
        app: {{.Values.name}}
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [
            {
              "name": "{{.Values.networkAttachmentDefinition}}", 
              "interface": "{{.Values.interface}}",
              "namespace": "{{.Values.namespace}}",
              "ips": ["{{.Values.ip}}"]
            }
          ]
    spec:
      containers:
      - name: {{.Values.name}}
        image: {{.Values.image}}:{{.Values.tag}}
        imagePullPolicy: Never
        ports:
        - containerPort: {{.Values.port}}
        command: ["{{.Values.command}}"]
        args: 
          [
            "-p",
            "static",
            "--mqtt-host",
            "{{.Values.mqttbrokerService}}",
            "-i",
            "{{.Values.interface}}",
            "--instance",
            "{{.Values.rsuName}}",
            "--security",
            "{{.Values.security}}"
        ]
      initContainers:
      - name: {{.Values.name}}-init-mqtt-broker-svc
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup {{.Values.mqttbrokerService}}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for {{.Values.mqttbrokerService}}; sleep 2; done"]
      restartPolicy: Always
      nodeName: {{.Values.nodeName}}

